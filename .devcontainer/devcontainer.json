// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-dockerfile
{
  "name": "Existing Dockerfile",
  "build": {
    // Sets the run context to one level up instead of the .devcontainer folder.
    "context": ".",
    // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
    "dockerfile": "./Dockerfile"
    // "args": {
    //   "user_id": "501",
    //   "group_id": "20"
    // }
  },
  "mounts": [
    {
      "type": "volume", "source": "zsh-volume", "target": "/zsh-volume"
    }
  ],

  // Features to add to the dev container. More info: https://containers.dev/features.
  // BUT, DO NOT INVOKE 'features' from devcontainer.json as it is manually called from Dockerfile.
  // "features": {},

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Uncomment the next line to run commands after the container is created.
  // "postCreateCommand": "cat /etc/os-release",

  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      // Reduce dependency on devcontainer.json. So let's use bin/install-extension.sh
      "extensions": [
      ]
    }
  }

  // Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "devcontainer"
}
